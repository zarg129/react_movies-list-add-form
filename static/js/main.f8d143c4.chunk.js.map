{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","errors","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","handleValidation","props","onAdd","this","formIsValid","push","test","classNames","redBorder","onSubmit","type","placeholder","onChange","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"6wEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,2BCtBGK,EAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,GACRG,OAAQ,CACNjB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,KAZd,EAgBEI,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAEd,EAAKC,SAAL,eACGF,EAAOC,KApBd,EAwBEE,aAAe,SAACL,GACdA,EAAMM,iBACF,EAAKC,qBACP,EAAKC,MAAMC,MAAM,EAAKZ,MAAMhB,OAC5B,EAAKuB,SAAS,CACZvB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,OAjChB,iEAsCsB,IAAD,EACuCe,KAAKb,MAArDhB,EADS,EACTA,MAAOC,EADE,EACFA,YAAaC,EADX,EACWA,OAAQC,EADnB,EACmBA,QAASW,EAD5B,EAC4BA,OACvCG,EAAS,CACbjB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IAENgB,GAAc,EA2ClB,OAzCK9B,IACH8B,GAAc,EACdb,EAAOjB,MAAM+B,KAAK,mBAGf9B,IACH6B,GAAc,EACdb,EAAOhB,YAAY8B,KAAK,yBAGrB7B,IACH4B,GAAc,EACdb,EAAOf,OAAO6B,KAAK,uBAGhB5B,IACH2B,GAAc,EACdb,EAAOd,QAAQ4B,KAAK,sBAGjBjB,IACHgB,GAAc,EACdb,EAAOH,OAAOiB,KAAK,qBAIhB,qKAAqKC,KAAK7B,KAC7K2B,GAAc,EACdb,EAAOd,QAAQ4B,KAAK,0BAIjB,qKAAqKC,KAAKlB,KAC7KgB,GAAc,EACdb,EAAOH,OAAOiB,KAAK,yBAGrBF,KAAKN,SAAS,CACZN,WAGKa,IA1FX,+BA6FY,IAAD,EACyDD,KAAKb,MAA7DhB,EADD,EACCA,MAAOC,EADR,EACQA,YAAaC,EADrB,EACqBA,OAAQC,EAD7B,EAC6BA,QAASW,EADtC,EACsCA,OAAQG,EAD9C,EAC8CA,OAErD,OACE,0BACEb,UAAW6B,IACT,CAAEC,UAAWjB,EAAOjB,MAAM,KAE5BqB,KAAK,OACLc,SAAUN,KAAKL,cAEf,2BACEY,KAAK,OACLf,KAAK,QACLgB,YAAY,QACZf,MAAOtB,EACPsC,SAAUT,KAAKX,eAEjB,yBAAKd,UAAU,SACZa,EAAOjB,MAAM,IAEhB,2BACEI,UAAW6B,IACT,CAAEC,UAAWjB,EAAOjB,MAAM,KAE5BoC,KAAK,OACLC,YAAY,cACZhB,KAAK,cACLC,MAAOrB,EACPqC,SAAUT,KAAKX,eAEjB,yBAAKd,UAAU,SACZa,EAAOhB,YAAY,IAEtB,2BACEG,UAAW6B,IACT,CAAEC,UAAWjB,EAAOjB,MAAM,KAE5BoC,KAAK,OACLC,YAAY,SACZhB,KAAK,SACLC,MAAOpB,EACPoC,SAAUT,KAAKX,eAEjB,yBAAKd,UAAU,SACZa,EAAOf,OAAO,IAEjB,2BACEE,UAAW6B,IACT,CAAEC,UAAWjB,EAAOjB,MAAM,KAE5BoC,KAAK,OACLC,YAAY,UACZhB,KAAK,UACLC,MAAOnB,EACPmC,SAAUT,KAAKX,eAEjB,yBAAKd,UAAU,SACZa,EAAOd,QAAQ,IAElB,2BACEC,UAAW6B,IACT,CAAEC,UAAWjB,EAAOjB,MAAM,KAE5BoC,KAAK,OACLC,YAAY,SACZhB,KAAK,SACLC,MAAOR,EACPwB,SAAUT,KAAKX,eAEjB,yBAAKd,UAAU,SACZa,EAAOH,OAAO,IAEjB,4BAAQsB,KAAK,UAAb,YAtKR,GAA8BG,a,OCEjBC,EAAb,4MACExB,MAAQ,CACNN,OAAQ+B,GAFZ,EAKEC,SAAW,SAAC9B,GACV,EAAKW,UAAS,SAAAP,GAAK,MAAK,CACtBN,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,CAAoBE,SAPhC,uDAWY,IACAF,EAAWmB,KAAKb,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUwB,MAAOC,KAAKa,iBApBhC,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f8d143c4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errors: {\n      title: [],\n      description: [],\n      imgUrl: [],\n      imdbUrl: [],\n      imdbId: [],\n    },\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.handleValidation()) {\n      this.props.onAdd(this.state.title);\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  }\n\n  handleValidation() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const errors = {\n      title: [],\n      description: [],\n      imgUrl: [],\n      imdbUrl: [],\n      imdbId: [],\n    };\n    let formIsValid = true;\n\n    if (!title) {\n      formIsValid = false;\n      errors.title.push('Title is empty');\n    }\n\n    if (!description) {\n      formIsValid = false;\n      errors.description.push('Description is empty');\n    }\n\n    if (!imgUrl) {\n      formIsValid = false;\n      errors.imgUrl.push('Image URL is empty');\n    }\n\n    if (!imdbUrl) {\n      formIsValid = false;\n      errors.imdbUrl.push('IMDB URL is empty');\n    }\n\n    if (!imdbId) {\n      formIsValid = false;\n      errors.imdbId.push('IMDB ID is empty');\n    }\n\n    // eslint-disable-next-line\n    if (!/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/.test(imdbUrl)) {\n      formIsValid = false;\n      errors.imdbUrl.push('IMDB URL is not valid');\n    }\n\n    // eslint-disable-next-line\n    if (!/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/.test(imdbId)) {\n      formIsValid = false;\n      errors.imdbId.push('IMDB ID is not valid');\n    }\n\n    this.setState({\n      errors,\n    });\n\n    return formIsValid;\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId, errors } = this.state;\n\n    return (\n      <form\n        className={classNames(\n          { redBorder: errors.title[0] },\n        )}\n        name=\"text\"\n        onSubmit={this.handleSubmit}\n      >\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"title\"\n          value={title}\n          onChange={this.handleChange}\n        />\n        <div className=\"error\">\n          {errors.title[0]}\n        </div>\n        <input\n          className={classNames(\n            { redBorder: errors.title[0] },\n          )}\n          type=\"text\"\n          placeholder=\"description\"\n          name=\"description\"\n          value={description}\n          onChange={this.handleChange}\n        />\n        <div className=\"error\">\n          {errors.description[0]}\n        </div>\n        <input\n          className={classNames(\n            { redBorder: errors.title[0] },\n          )}\n          type=\"text\"\n          placeholder=\"imgUrl\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          onChange={this.handleChange}\n        />\n        <div className=\"error\">\n          {errors.imgUrl[0]}\n        </div>\n        <input\n          className={classNames(\n            { redBorder: errors.title[0] },\n          )}\n          type=\"text\"\n          placeholder=\"imdbUrl\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n        />\n        <div className=\"error\">\n          {errors.imdbUrl[0]}\n        </div>\n        <input\n          className={classNames(\n            { redBorder: errors.title[0] },\n          )}\n          type=\"text\"\n          placeholder=\"imdbId\"\n          name=\"imdbId\"\n          value={imdbId}\n          onChange={this.handleChange}\n        />\n        <div className=\"error\">\n          {errors.imdbId[0]}\n        </div>\n        <button type=\"submit\">\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}